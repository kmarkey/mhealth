phys14d = factor(X_PHYS14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
ment14d = factor(X_MENT14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
exercise = factor(EXERANY2, labels = c("1"= "yes", "2" = "no", "7" = NA, "9" = NA)),
genhealth = factor(GENHLTH, labels =  c("1" = "excellent", "2" = "very good", "3" = "good",
"4" = "fair", "5" = "poor", "7" = NA, "9" = NA)),
age = factor(X_AGE_G, labels = c("1" = "18-24", "2" = "25-34", "3" = "35-44",
"4" = "45-54", "5" = "55-64", "6" = "65+")),
income = factor(X_INCOMG, labels = c("1" = "<15000", "2" = "15000-24999",
"3" = "25000-34999", "4" = "35000-49999",
"5" = "50000+", "9" = NA), ordered = TRUE),
employed = factor(EMPLOY1, labels = c("1" = "Employed", "2" = "Self-employed",
"3" = "Out of work 1+ years", "4" = "Out of work <1 year",
"5" = "Homemaker", "6" = "Student", "7" = "Retired", "8" = "Unable to work",
"9" = NA))) %>% # add these vars to calc
dplyr::select(-all_of(calc))
brfss <- cdc %>%
dplyr::rename_at(vars(), .fn = sub("^_", "X_", .))
vars(cdc)
brfss <- cdc %>%
dplyr::rename_at(.fn = sub("^_", "X_", .))
brfss <- cdc %>%
dplyr::rename_with(.fn = sub("^_", "X_", .))
gc()
brfss <- cdc %>%
dplyr::rename_with(.fn = sub("^_", "X_", .))
names(cdc) <- sub("^_", "X_", names(cdc))
unique(cdc$X_METSTAT)
brfss <- cdc %>%
dplyr::filter(IYEAR == 2020, X_STATE != "66" & X_STATE != "72") %>%
dplyr::select(all_of(idvar), all_of(cdchealthvars), all_of(othervars)) %>%
dplyr::mutate(date = as.Date(IDATE, format = "%m%d%Y"),
qstlang = factor(QSTLANG, labels = c("1" = "english", "2" = "spanish", "3" = "other")),
sex = factor(X_SEX, labels = c("1" = "male", "2" = "female")),
edu = factor(X_EDUCAG, labels = c("1" = "Did not graduate High School",
"2" = "Graduated High School",
"3" = "Attended College or Technical School",
"4" = "Graduated from College or Technical School",
"9" = NA)),
metro = factor(X_METSTAT, labels = c("1" = "metropolitan", "2" = "non-metropolitan")),
urban = factor(X_URBSTAT, labels = c("1" = "urban", "2" = "rural")),
race = factor(X_IMPRACE, labels = c("1" = "white", "2" = "black", "3" = "asian",
"4" = "american indian", "5" = "hispanic", "6" = "other")),
health = factor(X_RFHLTH, labels = c("1" = "good", "2" = "poor", "9" = NA)),
phys14d = factor(X_PHYS14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
ment14d = factor(X_MENT14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
exercise = factor(EXERANY2, labels = c("1"= "yes", "2" = "no", "7" = NA, "9" = NA)),
genhealth = factor(GENHLTH, labels =  c("1" = "excellent", "2" = "very good", "3" = "good",
"4" = "fair", "5" = "poor", "7" = NA, "9" = NA)),
age = factor(X_AGE_G, labels = c("1" = "18-24", "2" = "25-34", "3" = "35-44",
"4" = "45-54", "5" = "55-64", "6" = "65+")),
income = factor(X_INCOMG, labels = c("1" = "<15000", "2" = "15000-24999",
"3" = "25000-34999", "4" = "35000-49999",
"5" = "50000+", "9" = NA), ordered = TRUE),
employed = factor(EMPLOY1, labels = c("1" = "Employed", "2" = "Self-employed",
"3" = "Out of work 1+ years", "4" = "Out of work <1 year",
"5" = "Homemaker", "6" = "Student", "7" = "Retired", "8" = "Unable to work",
"9" = NA))) %>% # add these vars to calc
dplyr::select(-all_of(calc))
# fix state name
brfss <- tibble(oldstate = unique(as.numeric(brfss$X_STATE)), newstate = 1:51) %>%
right_join(brfss, by = c("oldstate" = "X_STATE")) %>%
right_join(statekey, by = c("newstate" = "num")) %>%
dplyr::select(-abb, -oldstate, -newstate) %>%
dplyr::mutate(name = as.factor(name))
###############################################################################
# dictionary: https://www.datafiles.samhsa.gov/sites/default/files/field-uploads-protected/studies/N-MHSS-2020/N-MHSS-2020-datasets/N-MHSS-2020-DS0001/N-MHSS-2020-DS0001-info/N-MHSS-2020-DS0001-info-codebook.pdf
nmhss <- read_csv("data/nmhss-puf-2020-csv.csv")
ndem <- c("LST", "MHINTAKE", "MHDIAGEVAL", "TREATMT", "FACILITYTYPE", "FOCUS", "OWNERSHP",
"PUBLICAGENCY", "RELIG", "NOTREAT", "ANTIPSYCH", "MHCASEMGMT", "MHCHRONIC", "PRIMARYCARE",
"DIETEXERCOUNSEL", "MHEDUCATION", "MHNOSVCS", "SRVC31", "NOSPECGRP", "LANG", "ADOPTSECLUSION",
"PAYASST", "LICENMH", "OTHFAC", "FACNUM", "IPSERV", "IPTOTAL")
apr2020 <- c("OPSERV", "OPTOTAL", "OPSEXTOTM", "OPSEXTOTF", "OPAGETOT017", "OPAGETOT1864", "OPAGETOT65",
"OPETHTOTHISP", "OPETHTOTNONHISP", "OPETHTOTUNK", "OPRACETOTINDIAN", "OPRACETOTASIAN",
"OPRACETOTINDIAN", "OPRACETOTBLK", "OPRACETOTHAWPAC", "OPRACETOTWHIT", "OPRACETOTUNK",
"OPLEGALTOTVOL", "OPLEGALTOTNONFOREN", "OPLEGALTOTFOREN", "COD_PCT", "TOTADMIS",
"PERCENTVA")
treat <- c("TREATMT", "TREATPSYCHOTHRPY", "TREATFAMTHRPY", "TREATGRPTHRPY", "TREATCOGTHRPY",
"TREATDIALTHRPY", "TREATCOGREM", "TREATBEHAVMOD", "TREATDUALMHSA", "TREATTRAUMATHRPY",
"TREATACTVTYTHRPY","TREATELECTRO", "TREATTMS", "TREATKIT", "TREATEMDR", "TREATTELEMEDINCE",
"TREATOTH", "ASSERTCOMM", "SED", "TAYOUNGADULTS", "SPMI", "SRVC63", "ALZHDEMENTIA",
"SRVC31", "SPECGRPEATING", "FIRSTEPPSYCH", "SRVC122", "POSTTRAUM", "SRVC116",
"TRAUMATICBRAIN", "SRVC113", "SRVC114", "SRVC115", "SRVC62", "SRVC61", "SRVC32", "SRVC35",
"NOSPECGRP")
drug <- c("ANTIPSYCH", "CHLOR_NO", "CHLOR_ORAL", "CHLOR_INJ", "CHLOR_REC", "DROPE_NO",
"DROPE_INJ", "FLUPH_NO", "FLUPH_ORAL", "FLUPH_INJ", "FLUPH_INJ", "HALOP_NO",
"HALOP_ORAL", "HALOP_INJ", "HALOP_LAI", "LOXAP_NO", "LOXAP_ORAL", "LOXAP_INJ",
"PERPH_NO", "PERPH_NO", "PERPH_ORAL", "PERPH_INJ", "PIMOZ_NO", "PIMOZ_ORAL",
"PIMOZ_TOP", "PROCH_NO", "PROCH_ORAL", "PROCH_INJ", "PROCH_REC", "THIOT_NO",
"THIOT_ORAL", "THIOT_INJ", "THIOR_NO", "THIOR_ORAL", "TRIFL_NO", "TRIFL_ORAL",
"TRIFL_INJ", "FSTGENOTH_NO", "FSTGENOTH_ORAL", "FSTGENOTH_INJ", "FSTGENOTH_LAI",
"FSTGENOTH_REC", "FSTGENOTH_TOP", "ARIPI_NO", "ARIPI_ORAL", "ARIPI_INJ", "ARIPI_LAI",
"ASENA_NO", "ASENA_ORAL", "ASENA_INJ", "BREXP_NO", "BREXP_ORAL", "CARIP_NO",
"CARIP_ORAL", "CLOZA_NO", "CLOZA_ORAL", "ILOPE_NO", "ILOPE_ORAL", "LURAS_NO",
"LURAS_ORAL", "OLANZ_NO", "OLANZ_ORAL", "OLANZ_INJ", "OLANZ_LAI", "OLANZFLU_NO",
"OLANZFLU_ORAL", "PALIP_NO", "PALIP_ORAL", "PALIP_INJ", "PALIP_LAI", "QUETI_NO",
"QUETI_ORAL", "RISPE_NO", "RISPE_ORAL", "RISPE_INJ", "RISPE_LAI", "ZIPRA_NO",
"ZIPRA_ORAL", "ZIPRA_INJ", "SECGEN1OTH_NO", "SECGEN1OTH_ORAL", "SECGEN1OTH_INJ",
"SECGEN1OTH_LAI", "SECGEN1OTH_REC", "SECGEN1OTH_TOP", "SECGEN2OTH_NO", "SECGEN2OTH_ORAL",
"SECGEN2OTH_INJ", "SECGEN2OTH_LAI", "SECGEN2OTH_REC", "SECGEN2OTH_TOP", "SECGEN3OTH_NO",
"SECGEN3OTH_ORAL", "SECGEN3OTH_INJ", "SECGEN3OTH_LAI", "SECGEN3OTH_REC", "SECGEN3OTH_TOP"
)
management <- c("MHINTCASEMGMT", "MHCASEMGMT", "MHCOURTORDERED", "MHAOT", "MHCHRONIC",
"ILLNESSMGMT", "PRIMARYCARE", "DIETEXERCOUNSEL", "FAMPSYCHED", "MHEDUCATION",
"MHHOUSING", "SUPPHOUSING",  "MHPSYCHREHAB", "MHVOCREHAB", "SUPPEMPLOY", "FOSTERCARE",
"MHLEGAL", "MHSUICIDE", "MHCONSUMER", "MHHBV", "MHHCV", "MHHIV", "MHSTD", "MHTB",
"MHTOBACCOUSE", "MHTOBACCOCESS", "MHNICOTINEREP", "SMOKINGCESSATION", "MHOTH",
"MHNOSVCS", "YNGCHLD", "CHILDREN", "ADOLES", "YOUNGADULTS", "ADULT", "SENIORS",
"CRISISTEAM2", "PSYCHON", "PSYCHOFF","SIGNLANG", "LANG", "LANGPROV", "CONTED",
"CASEREV", "QUALREV", "OUTFUP","CQIP", "SATSUR", "CPPR", "RCA", "SMOKINGPOLICY",
"USEDSECLUSION", "ADOPTSECLUSION", "FEESCALE", "PAYASST","REVCHK1", "REVCHK2",
"REVCHK8", "REVCHK5", "REVCHK10", "FUNDSMHA", "FUNDSTATEWELFARE","FUNDSTATEJUV",
"FUNDSTATEEDUC", "FUNDOTHSTATE", "FUNDLOCALGOV", "FUNDCSBG", "FUNDCMHG", "FUNDFEDGRANT",
"REVCHK15", "FUNDVA", "REVCHK17", "FUNDPRIVCOMM", "REVCHK2A", "LICENMH", "LICENSED",
"LICENPH", "LICENSEDFCS", "LICENHOS", "JCAHO", "CARF", "COA", "CMS", "OTHSTATE",
"OTHFAC", "FACNUM", "IPSERV", "IPTOTAL", "IPAGETOT017", "IPAGETOT1864", "IPAGETOT65")
lang <- c("LANG", "LANGPROV", "LANG16", "LANG_B", "LANG1", "LANG2", "LANG3", "LANG21", "LANG4", "LANG5",
"LANG6", "LANG7", "LANG8", "LANG24", "LANG9", "LANG10", "LANG22", "LANG25", "LANG26", "LANG11",
"LANG19", "LANG23", "LANG12", "LANG13", "LANG14", "LANG15", "LANG20", "LANG17", "LANG18")
calc <- c("LANGPROV", "TOTADMIS", "OPLEGALTOTFOREN", "OPLEGALTOTNONFOREN", "OPLEGALTOTVOL", "OPRACETOTUNK",
"OPRACETOTMR", "OPRACETOTWHIT", "OPRACETOTHAWPAC", "OPRACETOTBLK", "OPRACETOTASIAN", "OPRACETOTINDIAN",
"OPETHTOTUNK", "OPETHTOTNONHISP", "OPETHTOTHISP", "OPAGETOT65", "OPAGETOT1864", "OPAGETOT017")
nmhss1 <- nmhss %>%
# dplyr::filter() %>%
dplyr::select(all_of(ndem), all_of(apr2020)) %>%
dplyr::mutate(across(all_of(apr2020), basiclayer),
across(all_of(ndem), basiclayer),
facilitytype = factor(FACILITYTYPE, labels = c("1" = "Psychiatric hospital",
"2" = "Separate inpatient psychiatric unit of a general hospital",
"3" = "Residential treatment center for children",
"4" = "Residential treatment center for adults",
"5" = "Other residential treatment facility",
"6" = "Veterans Administration Medical Center (VAMC)",
"7" = "Community Mental Health Center (CMHC)",
"8" = "Certified Community Behavioral Health Clinic (CCBHC)",
"9" = "Partial hospitalization/day treatment facility",
"10" = "Outpatient MHF",
"11" = "Multi-setting MHF",
"12" = "Other")),
focus = factor(FOCUS, labels = c("1" = "Mental health treatment",
"3" = "Mental health/substance abuse treatment",
"4" = "General health care",
"5" = "Other")),
ownership = factor(OWNERSHP, labels = c("1" = "Private for-profit organization",
"2" = "Private non-profit organization",
"3" = "Public agency or department")),
operator = factor(PUBLICAGENCY, labels = c("-2" = "logical skip",
"1" = "State mental health authority (SMHA)",
"2" = "Other state government agency or department",
"3" = "Regional authority orgovernment",
"4" = "Tribal government",
"5" = "Indian Health Service",
"6" = "Department of Veterans Affairs",
"7" = "Other")),
facnum = factor(FACNUM, labels = c("-2" = "1",
"1" = "2-5",
"2" = "6-10",
"3" = "11-30",
"4" = "30+"))) %>%
dplyr::select(-FACILITYTYPE, -FOCUS, -OWNERSHP, -PUBLICAGENCY, -FACNUM)
# fix states, remove PR and oher
nmhss1 <- right_join(nmhss1, statekey, by = c("LST" = "abb")) %>%
dplyr::select(-LST, -num)
#remove objects
rm(cdc)
source("joins.R")
p <- brfss %>%
ggplot() +
geom_bar(aes(x = phys14d, fill = phys14d)) +
scale_y_continuous(limits = c(0, 300000), labels = comma) +
labs(x = "Phsyical Health", y = "Count") +
ljtheme() +
guides(fill = "none")
library(dplyr)
library(ggplot2)
source("~/LocalRStudio/mhealth/figgen.R", echo=TRUE)
gc()
library(comma)
library(scales)
### extra data
#population stats
pop <- read_csv("data/census2020pop.csv") %>%
dplyr::mutate(name = tolower(NAME)) %>%
right_join(statekey, by = "name") %>%
summarise(name, abb, num, pop = ESTIMATESBASE2020, per = pop / sum(ESTIMATESBASE2020))
p <- brfss %>%
ggplot() +
geom_bar(aes(x = phys14d, fill = phys14d)) +
scale_y_continuous(limits = c(0, 300000), labels = comma) +
labs(x = "Phsyical Health", y = "Count") +
ljtheme() +
guides(fill = "none")
pal <- c("#f6aa1c","#08415c","#6b818c","#eee5e9","#ba7ba1","#c28cae","#a52a2a")
blue <- "#114482"
lightblue <- "#146ff8"
llightblue <- "#AFCFFF"
red <- "#a52a2a"
white <- "#FBFFF1"
yellow <- "#F6AA1C"
ljtheme <- function(){
theme_minimal() %+replace%
theme(
panel.grid.major = element_line(linetype = "solid", color = llightblue, size = 0.1),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = white), #light
panel.border = element_rect(color = lightblue, fill = NA, linetype = "solid", size = 2),
legend.background = element_rect(fill = white, color = lightblue, size = 1), # legend
legend.text = element_text(color = blue),
legend.title = element_text(face = "bold.italic", color = blue),
legend.position = "bottom",
legend.key = element_rect(fill = white),
text = element_text(color = white),
axis.title = element_text(face = "italic", size = 11, color = white),
axis.text = element_text(color = white, size = 9),
axis.ticks = element_line(color = white, size = .5, lineend = "butt"),
axis.ticks.length = unit(.1, "cm"),
plot.title = element_text(face = "bold", # labels
color = white, size = 14, hjust = 0, vjust = 1.5),
plot.subtitle = element_text(color = white, hjust = 0, vjust = 1.5, face = "italic"),
plot.caption = element_text(color = white, face = "bold", hjust = 1),
plot.background = element_rect(fill = blue),
strip.background = element_blank(),
strip.text = element_text())}
theme_set(ljtheme())
p <- brfss %>%
ggplot() +
geom_bar(aes(x = phys14d, fill = phys14d)) +
scale_y_continuous(limits = c(0, 300000), labels = comma) +
labs(x = "Phsyical Health", y = "Count") +
ljtheme() +
guides(fill = "none")
m <- brfss %>%
ggplot() +
geom_bar(aes(x = ment14d, fill = ment14d)) +
scale_y_continuous(limits = c(0, 300000), labels = comma) +
labs(x = "Mental Health", y = "Count") +
ljtheme() +
guides(fill = "none")
title <- ggdraw() +
draw_label(
"Number of Days per Month Respondants Had a \"Bad Day\"",
fontface = 'bold',
x = 0,
hjust = -.1,
color = blue
)
plot_grid(title, plot_grid(p, m, align = "vh"), nrow = 2, rel_heights = c(0.1, 1))
library(cowplot)
title <- ggdraw() +
draw_label(
"Number of Days per Month Respondants Had a \"Bad Day\"",
fontface = 'bold',
x = 0,
hjust = -.1,
color = blue
)
plot_grid(title, plot_grid(p, m, align = "vh"), nrow = 2, rel_heights = c(0.1, 1))
###
brfss %>%
dplyr::filter(MENTHLTH < 31, PHYSHLTH < 31) %>%
ggplot() +
geom_point(aes(x = MENTHLTH, y = PHYSHLTH), alpha = 0.05) +
labs(title = "Number of days ____ health was not good")
#medical cost
brfss %>%
dplyr::filter(MEDCOST %in% c(1, 2)) %>%
ggplot() + geom_bar(aes(x = MEDCOST)) + scale_y_continuous(labels = comma) +
scale_x_discrete(limits = c("Yes", "No")) +
labs(caption = "BRFSS",
x = "Was there a time in the past 12 months when you needed to see a doctor \nbut could not because of cost?")
#checkup
brfss %>%
dplyr::filter(CHECKUP1 %in% c(1, 2, 3, 4)) %>%
ggplot() + geom_bar(aes(x = CHECKUP1)) + scale_y_continuous(labels = comma) +
scale_x_discrete(limits = c("< 1 year", "< 2 years", "< 5 years", "5+ years")) +
labs(caption = "BRFSS",
x = "About how long has it been since you last visited a doctor for a routine checkup?")
###
nmhss1 %>%
dplyr::filter(IPTOTAL != "logical skip") %>%
ggplot() +
geom_bar(aes(x = IPTOTAL), fill = pal[7]) +
labs(x = "Total number of patients receiving 24-hour hospital inpatient \nmental health treatment",
caption = "N-MHSS",
title = "Inpatient Count for each Facility",
subtitle = "On April 30th, 2020") +
theme(axis.text.x = element_text(angle = 10, vjust = .90))
#### top 10 mhd 14+
mhd14top <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d == "14+", 1, 0))/n(), rank = 1) %>%
distinct() %>%
arrange(desc(per)) %>%
head(10)
#### bottom 10 mhd14+
mhd14bottom <- b1 %>%
group_by(name) %>%
summarise( per = sum(ifelse(ment14d == "14+", 1, 0))/n(), rank = 2) %>%
distinct() %>%
arrange(desc(per)) %>%
tail(10)
bind_rows(mhd14top, mhd14bottom) %>%
ggplot() + geom_bar(aes(x = reorder(name, -per), y = per * 100, fill = rank), stat = "identity") +
guides(fill = "none") +
labs(x = "", y = "Percent", title = "Percentage of Respondents Who Had 14+ Bad Mental Health Days",
subtitle = "By State, Top 10 and Bottom 10", caption = "BRFSS") +
theme(axis.text.x = element_text(angle = 20))
us_states <- map_data("state")
# % who had > 13 bad MHD
data <- b1 %>%
group_by(name) %>%
summarise( per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
distinct() %>%
right_join(us_states, by = c("name" = "region"))
ggplot(data, aes(x = long, y = lat,
group = group, fill = per * 100)) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
geom_polygon(color = "#8d99ae", size = 0.1) +
theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \nat Least 1 Bad Mental Health Days",
caption = "Data provided by BRFSS") +
scale_fill_distiller(palette = "Spectral") +
theme(text = element_text(size = 10))
ggplot(data, aes(x = long, y = lat,
group = group, fill = per * 100)) +
coord_map(projection = "mercator", lat0 = 39, lat1 = 45) +
geom_polygon(color = "#8d99ae", size = 0.1) +
theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \nat Least 1 Bad Mental Health Days",
caption = "Data provided by BRFSS") +
scale_fill_distiller(palette = "Spectral") +
theme(text = element_text(size = 10))
ggplot(data, aes(x = long, y = lat,
group = group, fill = per * 100)) +
coord_map(projection = "mercator", lat0 = 39, lat1 = 45) +
geom_polygon(color = "#8d99ae", size = 0.1) +
theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \nat Least 1 Bad Mental Health Days",
caption = "Data provided by BRFSS") +
scale_fill_distiller(palette = "Spectral") +
theme(text = element_text(size = 10))
ggplot(data, aes(x = long, y = lat,
group = group, fill = per * 100)) +
coord_map(projection = "mercator") +  #, lat0 = 39, lat1 = 45) +
geom_polygon(color = "#8d99ae", size = 0.1) +
theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \nat Least 1 Bad Mental Health Days",
caption = "Data provided by BRFSS") +
scale_fill_distiller(palette = "Spectral") +
theme(text = element_text(size = 10))
ggplot(data, aes(x = long, y = lat,
group = group, fill = per * 100)) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
geom_polygon(color = "#8d99ae", size = 0.1) +
theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \nat Least 1 Bad Mental Health Days",
caption = "Data provided by BRFSS") +
scale_fill_distiller(palette = "Spectral") +
theme(text = element_text(size = 10))
### Mental health treatment specialty
pcor <- n1 %>%
dplyr::filter(focus == "Mental health treatment") %>%
group_by(name) %>%
dplyr::summarise(TOT = n()) %>%
distinct() %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise( per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("Number of MHF vs. At Least 1 Bad Mental Health Day: \n", cor(data$TOT, data$per))
ggplot(data) +
geom_text_repel(aes(x = per, y = TOT, label = name), size = 3) +
labs(x = "Percent of Respondents who had at Least 1 Bad Mental Health Day",
y = "Number of MHF",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus")
library(ggrepel)
ggplot(data) +
geom_text_repel(aes(x = per, y = TOT, label = name), size = 3) +
labs(x = "Percent of Respondents who had at Least 1 Bad Mental Health Day",
y = "Number of MHF",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus")
#Please modify the chunk set up as you wish, some options are in # below
knitr::opts_chunk$set(fig.align = "center",
out.width = "90%",
out.height = "70%",
dpi = 600,
dev = 'png')
#Add packages
library(tidyverse)
library(cowplot)
library(ggridges)
library(kableExtra)
library(usmap)
library(corrplot)
library(readxl)
library(scales)
library(gridExtra)
library(ggrepel)
pcor <- n1 %>%
dplyr::select(name, TOT) %>%
distinct() %>%
left_join(pop, by = c("name")) %>%
dplyr::summarise(name, pcap = TOT/pop) %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("MHF per capita vs. At Least 1 Bad Mental Health Day: \n", cor(data$pcap, data$per))
# bad mhd > 13
pcor <- n1 %>%
dplyr::select(name, TOT) %>%
distinct() %>%
left_join(pop, by = c("name")) %>%
dplyr::summarise(name, pcap = TOT/pop) %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d == "14+", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("Number of Facilities Per Capita vs. 14+ Bad Mental Health Days: \n", cor(data$pcap, data$per))
pcor <- n1 %>%
dplyr::select(name, TOT) %>%
distinct() %>%
left_join(pop, by = c("name")) %>%
dplyr::summarise(name, pcap = TOT/pop) %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("MHF per capita vs. At Least 1 Bad Mental Health Day: \n", cor(data$pcap, data$per))
ggplot(data) +
geom_text_repel(aes(x = per, y = TOT, label = name), size = 3) +
labs(x = "Percent of Respondents who had at Least 1 Bad Mental Health Day",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus")
ggplot(data) +
geom_text_repel(aes(x = per, y = pcap, label = name), size = 3) +
labs(x = "Percent of Respondents who had at Least 1 Bad Mental Health Day",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus")
#### cutoff at 14+ days instead?
pcor <- n1 %>%
dplyr::select(name, TOT) %>%
distinct() %>%
left_join(pop, by = c("name")) %>%
dplyr::summarise(name, pcap = TOT/pop) %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d == "14+", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("Number of Facilities Per Capita vs. 14+ Bad Mental Health Days: \n", cor(data$pcap, data$per))
ggplot(data) +
geom_text_repel(aes(x = per, y = pcap, label = name), size = 3) +
labs(x = "Percent of Respondents who had at 14+ Bad Mental Health Days",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus")
ggplot(data) +
geom_text_repel(aes(x = per, y = pcap, label = name), size = 3) +
labs(x = "Percent of Respondents who had at 14+ Bad Mental Health Days",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus") +
geom_smooth(formula = y ~ x, method = "lm", lty = 2, se = FALSE)
ggplot(data, aes(x = per, y = pcap)) +
geom_point() +
geom_text_repel(aes(label = name)), size = 3) +
labs(x = "Percent of Respondents who had at 14+ Bad Mental Health Days",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus") +
geom_smooth(formula = y ~ x, method = "lm", lty = 2, se = FALSE)
ggplot(data, aes(x = per, y = pcap)) +
geom_point()
ggplot(data, aes(x = per, y = pcap)) +
geom_point() +
geom_text_repel(aes(label = name)), size = 3)
data <- left_join(pcor, mcor, by = "name")
#### cutoff at 14+ days instead?
pcor <- n1 %>%
dplyr::select(name, TOT) %>%
distinct() %>%
left_join(pop, by = c("name")) %>%
dplyr::summarise(name, pcap = TOT/pop) %>%
na.omit()
mcor <- b1 %>%
group_by(name) %>%
summarise(per = sum(ifelse(ment14d == "14+", 1, 0))/n()) %>%
distinct()
data <- left_join(pcor, mcor, by = "name")
cat("Number of Facilities Per Capita vs. 14+ Bad Mental Health Days: \n", cor(data$pcap, data$per))
ggplot(data, aes(x = per, y = pcap)) +
geom_point() +
geom_text_repel(aes(label = name)), size = 3)
ggplot(data, aes(x = per, y = pcap)) +
geom_point() +
geom_text_repel(aes(label = name), size = 3)
ggplot(data, aes(x = per, y = pcap)) +
geom_point() +
geom_text_repel(aes(label = name), size = 3) +
labs(x = "Percent of Respondents who had at 14+ Bad Mental Health Days",
y = "Number of MHF per capita",
title = "Mental Health Need and Availability",
subtitle = "Facilities with MHT focus") +
geom_smooth(formula = y ~ x, method = "lm", lty = 2, se = FALSE)
