y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
p
data <- nmhss %>%
group_by(state) %>%
dplyr::summarise(count = rowSums(ifelse(across(all_of(costvars)) == "yes", 1, 0)),
bins = as.character(cut_width(count, width = 2)),
bins = str_replace(
str_replace(
str_replace_all(
bins, "[\\[\\(\\]\\]]", ""), # much more complex that should be
",", "-"),
".*(?=-)", ~as.numeric(.) + 1),
bins = factor(bins, levels = rev(c("0-1", "2-3", "4-5", "6-7", "8-9", "10-11")), ordered = TRUE),
statecount = n())%>%
group_by(state, bins) %>%
dplyr::summarise(per = n()/statecount, statecount, state) %>%
distinct() %>%
inner_join(pop, by = "state")
p <- data %>%
ggplot() + geom_bar(aes(
x = reorder(str_to_title(state), statecount / pop),
y = per,
fill = bins
),
stat = "identity",
position = "stack") +
theme_classic() +
guides(fill = guide_legend(ncol = 3)) +
# coord_cartesian(xlim = c(1, 51), ylim = c(0, 1), clip = "off") +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
vjust = 0.2,
hjust = 1
),
axis.title.x = element_blank(),
legend.background = element_blank(),
legend.title = element_blank(),
legend.box.background = element_blank()
) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0)) +
fill_pal_discrete(rev(factype)) +
labs(title = "Most MHF Are Owned by Private Non-Profit Organizations",
y = "Proportion of Facilities") +
annotate(
"segment",
x = 1,
y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
p
p <- data %>%
ggplot() + geom_bar(aes(
x = reorder(str_to_title(state), statecount / pop),
y = per,
fill = bins
),
stat = "identity",
position = "stack") +
theme_classic() +
guides(fill = guide_legend(ncol = 3)) +
# coord_cartesian(xlim = c(1, 51), ylim = c(0, 1), clip = "off") +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
vjust = 0.2,
hjust = 1
),
axis.title.x = element_blank(),
legend.background = element_blank(),
legend.title = element_blank(),
legend.box.background = element_blank()
) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0)) +
fill_pal_discrete(rev(factype)) +
labs(title = "Number of Payment Types Accepted",
y = "Proportion of Facilities") +
annotate(
"segment",
x = 1,
y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
p
drilln(ownership) %>%
inner_join(pop, by = "state") %>%
ggplot() + geom_bar(aes(
x = reorder(str_to_title(state), statecount / pop),
y = count,
fill = ownership
),
stat = "identity",
position = "fill") +
theme_classic() +
guides(fill = guide_legend(ncol = 3)) +
# coord_cartesian(xlim = c(1, 51), ylim = c(0, 1), clip = "off") +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
vjust = 0.2,
hjust = 1
),
axis.title.x = element_blank(),
legend.background = element_blank(),
legend.title = element_blank(),
legend.box.background = element_blank()
) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0)) +
fill_pal_discrete(factype) +
labs(title = "Most MHF Are Owned by Private Non-Profit Organizations",
y = "Proportion of Facilities") +
annotate(
"segment",
x = 1,
y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
unique(nmhss$ownership)
data <- nmhss %>%
dplyr::filter(ownership == "Public agency or department")
data <- nmhss %>%
dplyr::filter(ownership == "Public agency or department") %>%
group_by(state) %>%
dplyr::summarise(count = rowSums(ifelse(across(all_of(costvars)) == "yes", 1, 0)),
bins = as.character(cut_width(count, width = 2)),
bins = str_replace(
str_replace(
str_replace_all(
bins, "[\\[\\(\\]\\]]", ""), # much more complex that should be
",", "-"),
".*(?=-)", ~as.numeric(.) + 1),
bins = factor(bins, levels = rev(c("0-1", "2-3", "4-5", "6-7", "8-9", "10-11")), ordered = TRUE),
statecount = n())%>%
group_by(state, bins) %>%
dplyr::summarise(per = n()/statecount, statecount, state) %>%
distinct() %>%
inner_join(pop, by = "state")
p <- data %>%
ggplot() + geom_bar(aes(
x = reorder(str_to_title(state), statecount / pop),
y = per,
fill = bins
),
stat = "identity",
position = "stack") +
theme_classic() +
guides(fill = guide_legend(ncol = 3)) +
# coord_cartesian(xlim = c(1, 51), ylim = c(0, 1), clip = "off") +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
vjust = 0.2,
hjust = 1
),
axis.title.x = element_blank(),
legend.background = element_blank(),
legend.title = element_blank(),
legend.box.background = element_blank()
) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0)) +
fill_pal_discrete(rev(factype)) +
labs(title = "Number of Payment Types Accepted",
y = "Proportion of Facilities") +
annotate(
"segment",
x = 1,
y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
p
unique(nmhss$ownership)
data <- nmhss %>%
dplyr::filter(ownership == "Private for-profit organization") %>%
group_by(state) %>%
dplyr::summarise(count = rowSums(ifelse(across(all_of(costvars)) == "yes", 1, 0)),
bins = as.character(cut_width(count, width = 2)),
bins = str_replace(
str_replace(
str_replace_all(
bins, "[\\[\\(\\]\\]]", ""), # much more complex that should be
",", "-"),
".*(?=-)", ~as.numeric(.) + 1),
bins = factor(bins, levels = rev(c("0-1", "2-3", "4-5", "6-7", "8-9", "10-11")), ordered = TRUE),
statecount = n())%>%
group_by(state, bins) %>%
dplyr::summarise(per = n()/statecount, statecount, state) %>%
distinct() %>%
inner_join(pop, by = "state")
p <- data %>%
ggplot() + geom_bar(aes(
x = reorder(str_to_title(state), statecount / pop),
y = per,
fill = bins
),
stat = "identity",
position = "stack") +
theme_classic() +
guides(fill = guide_legend(ncol = 3)) +
# coord_cartesian(xlim = c(1, 51), ylim = c(0, 1), clip = "off") +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
vjust = 0.2,
hjust = 1
),
axis.title.x = element_blank(),
legend.background = element_blank(),
legend.title = element_blank(),
legend.box.background = element_blank()
) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0)) +
fill_pal_discrete(rev(factype)) +
labs(title = "Number of Payment Types Accepted",
y = "Proportion of Facilities") +
annotate(
"segment",
x = 1,
y = 1.03,
xend = 31,
yend = 1.03,
arrow = arrow(type = "closed", length = unit(0.02, "npc"))
) +
annotate(
"text",
x = 23,
y = 1.07,
label = "More facilities per capita",
size = 3.3,
hjust = 0
)
p
## chloropleths
library(usmap)
## chloropleths
library(usmap)
us_states <- usmap::us_map(regions = "states") %>%
group_by(group) %>%
mutate(color = round(runif(1)))
#### % who had > 13 bad MHD
data <- drillb(ment14d) %>%
group_by(state) %>%
summarise(per = `count`/sum(`count`), ment14d, n = sum(`count`)) %>%
dplyr::filter(ment14d == "14+") %>%
right_join(us_states, by = c("state" = "full"))
p <- data %>%
ggplot() + geom_polygon(aes(x = x,
y = y,
group = group,
fill = per,
text = paste0(state, "\n", round(per * 100, 2), "%")),
color = "black",
linewidth = 0.2) +
coord_sf() +
scale_fill_fermenter(palette = 3,
guide = "colorbar",
direction = 1,
labels = c("10%", "12%", "14%", "16%"),
breaks = c(10, 12, 14, 16) / 100
) +
labs(title = "14+ Bad Mental Health Days per Month (Weighted)",
subtitle = "Weighted Percentage",
caption = "BRFSS 2020\ncdc.gov",
fill = "") +
theme(legend.position = "right",
legend.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(color = "transparent"),
plot.background = element_rect(color = "transparent"))
ggplotly(p, tooltip = "text")
htmlwidgets::saveWidget(last_plot(), "./figs/plot1.html")
options(warn=-1)
knitr::opts_chunk$set(fig.align = "center",
out.width = "90%",
out.height = "70%",
dpi = 600,
dev = 'png')
#Add packages
library(tidyverse)
library(cowplot)
library(ggridges)
library(kableExtra)
library(usmap)
library(corrplot)
library(readxl)
library(scales)
library(gridExtra)
library(ggrepel)
library(plotly)
# Set universal theme + palette for figures
pal <- c("#001219", "#005f73", "#0a9396", "#94d2bd", "#e9d8a6", "#ee9b00", "#ca6702", "#bb3e03", "#CA8D8F", "#ae2012", "#9b2226", "#61252F")
factype <- c("#264653", "#287271", "#2a9d8f", "#8ab17d", "#babb74", "#e9c46a", "#efb366", "#f4a261", "#ee8959", "#e76f51", "#DA5231", "#B85146")
operator <- c("#582f0e", "#734821", "#7f4f24", "#936639", "#a68a64", "#b6ad90", "#c2c5aa", "#a4ac86", "#A4A181", "#656d4a", "#414833", "#333d29")
cvi_palettes <-
function(palette,
n,
type = c("discrete", "continuous")) {
if (missing(n)) {
n <- length(palette)
}
type <- match.arg(type)
if (type == "continuous") {
out <- grDevices::colorRampPalette(palette)(n)
}
if (type == "discrete") { # space out colors if possible
if (n >= length(palette) / 2) {
out <- palette[1:n]
} else {
out <- palette[seq(1, n * 2, 2)]
}
}
structure(out, name = "pal", class = "palette")
}
fill_pal_discrete <- function(palette) {
ggplot2::scale_fill_manual(values = cvi_palettes(palette,
type = "discrete"))
}
fill_pal_continuous <- function(palette) {
ggplot2::scale_fill_manual(values = cvi_palettes(palette,
type = "continuous"))
}
mytheme <- function(){
theme_classic()
}
theme_set(mytheme())
suppressWarnings(
source("digest.R")
)
suppressWarnings(
source("joins.R")
)
p <- drillb(phys14d) %>%
group_by(phys14d) %>%
summarise(phys14d, tot = sum(count)) %>%
unique() %>%
ggplot() +
geom_bar(aes(x = phys14d, y = tot/1000000), stat = "identity", fill = "#e76f51", color = "#2B2D42") +
scale_y_continuous(limits = c(0, 200), labels = comma) +
scale_x_discrete(position = "top") +
labs(x = "Phsyical Health", y = "Frequency (in millions)") +
theme(axis.title.x = element_text(size = 14, face = "bold")) +
guides(fill = "none")
m <- drillb(ment14d) %>%
group_by(ment14d) %>%
summarise(ment14d, tot = sum(count)) %>%
unique() %>%
ggplot() +
geom_bar(aes(x = ment14d, y = tot/1000000), stat = "identity", fill = "#588157", color = "#2B2D42") +
scale_y_continuous(limits = c(0, 200), labels = comma) +
scale_x_discrete(position = "top") +
labs(x = "Mental Health") +
theme(axis.title.y = element_blank(),
axis.title.x = element_text(size = 14, face = "bold")) +
guides(fill = "none")
title <- ggdraw() +
draw_label(
"Number of Days per Month Respondants \"Had a Bad ____ Day\"",
fontface = 'bold',
hjust = 0.5
)
plot_grid(title, plot_grid(p, m, align = "vh"), nrow = 2, rel_heights = c(0.1, 1))
rm(p, m, title)
## chloropleths
library(usmap)
us_states <- usmap::us_map(regions = "states") %>%
group_by(group) %>%
mutate(color = round(runif(1)))
#### % who had > 13 bad MHD
data <- drillb(ment14d) %>%
group_by(state) %>%
summarise(per = `count`/sum(`count`), ment14d, n = sum(`count`)) %>%
dplyr::filter(ment14d == "14+") %>%
right_join(us_states, by = c("state" = "full"))
p <- data %>%
ggplot() + geom_polygon(aes(x = x,
y = y,
group = group,
fill = per,
text = paste0(state, "\n", round(per * 100, 2), "%")),
color = "black",
linewidth = 0.2) +
coord_sf() +
scale_fill_fermenter(palette = 3,
guide = "colorbar",
direction = 1,
labels = c("10%", "12%", "14%", "16%"),
breaks = c(10, 12, 14, 16) / 100
) +
labs(title = "14+ Bad Mental Health Days per Month (Weighted)",
subtitle = "Weighted Percentage",
caption = "BRFSS 2020\ncdc.gov",
fill = "") +
theme(legend.position = "right",
legend.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(color = "transparent"),
plot.background = element_rect(color = "transparent"))
ggplotly(p, tooltip = "text")
# htmlwidgets::saveWidget(last_plot(), "./figs/plot1.html")
data <- drillb(ment14d) %>%
group_by(state) %>%
summarise(per = `count`/sum(`count`), ment14d, n = sum(`count`)) %>%
dplyr::filter(ment14d == "14+") %>%
right_join(us_states, by = c("state" = "full"))
## chloropleths
library(usmap)
us_states <- usmap::us_map(regions = "states")
#### % who had > 13 bad MHD
data <- drillb(ment14d) %>%
group_by(state) %>%
summarise(per = `count`/sum(`count`), ment14d, n = sum(`count`)) %>%
dplyr::filter(ment14d == "14+") %>%
right_join(us_states, by = c("state" = "full"))
p <- data %>%
ggplot() + geom_polygon(aes(x = x,
y = y,
group = group,
fill = per,
text = paste0(state, "\n", round(per * 100, 2), "%")),
color = "black",
linewidth = 0.2) +
coord_sf() +
scale_fill_fermenter(palette = 3,
guide = "colorbar",
direction = 1,
labels = c("10%", "12%", "14%", "16%"),
breaks = c(10, 12, 14, 16) / 100
) +
labs(title = "14+ Bad Mental Health Days per Month (Weighted)",
subtitle = "Weighted Percentage",
caption = "BRFSS 2020\ncdc.gov",
fill = "") +
theme(legend.position = "right",
legend.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(color = "transparent"),
plot.background = element_rect(color = "transparent"))
ggplotly(p, tooltip = "text")
# htmlwidgets::saveWidget(last_plot(), "./figs/plot1.html")
us_map
library(usmapdata)
us_map
us_map
data(us_map)
data("us_map")
data("usmap::us_map")
us_states
