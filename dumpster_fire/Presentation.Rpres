Final Presentation
========================================================
author: Keaton Markey
date: 3/25/2022
autosize: true 
width: 1920
height: 1080

```{r include = FALSE}

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(maps))
suppressPackageStartupMessages(library(ggthemes))
suppressPackageStartupMessages(library(usmap))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(kableExtra))

#source("digest.R")
#source("agegroupjoin.R")
```

```{r setup, include=FALSE}
opts_chunk$set(cache=TRUE)

```

```{r theme, include = FALSE}
#Set universal theme + palette for figures

pal <- c("#f6aa1c","#08415c","#6b818c","#eee5e9","#ba7ba1","#c28cae","#a52a2a")

blue <- "#114482"
lightblue <- "#146ff8"
llightblue <- "#AFCFFF"
red <- "#a52a2a"
white <- "#FBFFF1"
yellow <- "#F6AA1C"

ljtheme <- function(){
    theme_minimal() %+replace%
    theme(
      panel.grid.major = element_line(linetype = "solid", color = llightblue, size = 0.1),
      panel.grid.minor = element_blank(),
      panel.background = element_rect(fill = white), #light
      panel.border = element_rect(color = lightblue, fill = NA, linetype = "solid", size = 2),
      legend.background = element_rect(fill = white, color = lightblue, size = 1), # legend
      legend.text = element_text(color = blue),
      legend.title = element_text(face = "bold.italic", color = blue),
      legend.position = "bottom",
      legend.key = element_rect(fill = white),
      text = element_text(color = white),
      axis.title = element_text(face = "italic", size = 11, color = white), 
      axis.text = element_text(color = white, size = 9), 
      axis.ticks = element_line(color = white, size = .5, lineend = "butt"), 
      axis.ticks.length = unit(.1, "cm"),
      plot.title = element_text(face = "bold", # labels
                              color = white, size = 14, hjust = 0, vjust = 1.5),
      plot.subtitle = element_text(color = white, hjust = 0, vjust = 1.5, face = "italic"),
      plot.caption = element_text(color = white, face = "bold", hjust = 1),
      plot.background = element_rect(fill = blue),
      strip.background = element_blank(),
      strip.text = element_text())}

theme_set(ljtheme())
```

```{r digest copy, include = FALSE}
# cleaning and eda for cdc

require(foreign)
require(readr)
require(dplyr)
require(stringr)

#setwd("LocalRStudio/mhealth352")

#################### states

statekey <- tibble(name = str_to_lower(state.name), abb = state.abb, num = c(1:8, 10:51)) %>%
  rows_insert(tibble(name = "district of columbia", abb = "DC", num = 9)) %>%
  arrange(name)

#################### functions
`%!in%` <- Negate(`%in%`)

# 0 = no
# 1 = yes
# -1 = missing
# -2 = logical skip
basiclayer <- function(x, ...) {
  if (all(levels(as.factor(x)) == c("-2", "-1", "0", "1"))) { # 4
    factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "no", "1" = "yes"), ordered = TRUE) 
  } else if (all(levels(as.factor(x)) == c("-1", "0", "1"))) { # 3
    factor(x, labels = c("-1" = NA, "0" = "no", "1" = "yes"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("0", "1"))) { # 2
    factor(x, labels = c("0" = "no", "1" = "yes"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2", "0", "1"))) { # 3 without missing
    factor(x, labels = c("-2" = "logical skip", "0" = "no", "1" = "yes"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2", "0", "1", "2", "3", "4", "5", "6", 
                                           "7", "8", "9", "10", "11", "12"))) { # 14 level to 12
    factor(x, labels = c("-2" = "logical skip", "0" = "0", "1" = "1-10", "2" = "11-20", 
                         "3" = "21-30", "4" = "31-40", "5" = "41-50", "6" = "51-75", 
                         "7" = "76-100", "8" = "101-250", "9" = "251-500", 
                         "10" = "501-1000", "11" = "1001-1500", "12" = "1500+"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6", 
                                           "7", "8", "9", "10", "11", "12"))) { # 15 level
    factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "0", "1" = "1-10", 
                         "2" = "11-20", "3" = "21-30", "4" = "31-40", "5" = "41-50", 
                         "6" = "51-75", "7" = "76-100", "8" = "101-250", "9" = "251-500", 
                         "10" = "501-1000", "11" = "1001-1500", "12" = "1500+"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6", 
                                           "7", "8", "9", "10", "11"))) { # 14 level to  11
    factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "0", "1" = "1-10", 
                         "2" = "11-20", "3" = "21-30", "4" = "31-40", "5" = "41-50", 
                         "6" = "51-75", "7" = "76-100", "8" = "101-250", "9" = "251-500", 
                         "10" = "501-1000", "11" = "1001-1500"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6", 
                                           "7", "8", "9", "10"))) { # 13 level
    factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "0", "1" = "1-10", 
                         "2" = "11-20", "3" = "21-30", "4" = "31-40", "5" = "41-50", 
                         "6" = "51-75", "7" = "76-100", "8" = "101-250", "9" = "251-500", 
                         "10" = "501-1000"), ordered = TRUE)
  } else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6", 
                                           "7"))) { # pct levels
    factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "0", "1" = "1-10", 
                         "2" = "11-20", "3" = "21-30", "4" = "31-40", "5" = "41-50", 
                         "6" = "51-75", "7" = "76-100"), ordered = TRUE)
  }
  else {
    cat("Function not applicable for column", deparse(substitute(x)), "\n")
    return(x)
  }
}

################################################################################
#### cdc first
# data dictionary
# https://www.cdc.gov/brfss/annual_data/2020/pdf/codebook20_llcp-v2-508.pdf
cdc <- read.xport("data/LLCP2020.XPT")

### TODO,
# filter out redundant vars
# remove bad vars
# decode some vars
# report decisions

#important vars
idvar <- c("X_STATE", "IDATE", "QSTLANG", "X_METSTAT",
           "X_URBSTAT", "X_IMPRACE", "X_RFHLTH",
           "X_PHYS14D", "X_MENT14D", "X_SEX", "X_AGE_G",
           "HTM4", "WTKG3", "X_BMI5", "X_EDUCAG", "X_INCOMG")
cdchealthvars <- c("GENHLTH", "PHYSHLTH", "MENTHLTH", "POORHLTH", "EMPLOY1", "EXERANY2")

# not included
calc <- c("IDATE", "QSTLANG", "X_SEX", "X_EDUCAG", "X_URBSTAT", "X_METSTAT", "X_IMPRACE",
          "X_RFHLTH", "X_PHYS14D", "X_MENT14D", "EXERANY2", "GENHLTH", "X_AGE_G")

brfss <- cdc %>%
  dplyr::filter(IYEAR == 2020, X_STATE %!in% c("66", "72")) %>%
  dplyr::select(all_of(idvar), all_of(cdchealthvars)) %>%
  dplyr::mutate(date = as.Date(IDATE, format = "%m%d%Y"),
         qstlang = factor(QSTLANG, labels = c("1" = "english", "2" = "spanish", "3" = "other")),
         sex = factor(X_SEX, labels = c("1" = "male", "2" = "female")),
         edu = factor(X_EDUCAG, labels = c("1" = "Did not graduate High School",
                                            "2" = "Graduated High School",
                                            "3" = "Attended College or Technical School",
                                            "4" = "Graduated from College or Technical School",
                                            "9" = NA)),
         metro = factor(X_METSTAT, labels = c("1" = "metropolitan", "2" = "non-metropolitan")),
         urban = factor(X_URBSTAT, labels = c("1" = "urban", "2" = "rural")),
         race = factor(X_IMPRACE, labels = c("1" = "white", "2" = "black", "3" = "asian", 
                                             "4" = "american indian", "5" = "hispanic", "6" = "other")),
         health = factor(X_RFHLTH, labels = c("1" = "good", "2" = "poor", "9" = NA)),
         phys14d = factor(X_PHYS14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
         ment14d = factor(X_MENT14D, labels = c("1" = "0", "2" = "1-13", "3" = "14+", "9" = NA)),
         exercise = factor(EXERANY2, labels = c("1"= "yes", "2" = "no", "7" = NA, "9" = NA)),
         genhealth = factor(GENHLTH, labels =  c("1" = "excellent", "2" = "very good", "3" = "good",
                                                 "4" = "fair", "5" = "poor", "7" = NA, "9" = NA)),
         age = factor(X_AGE_G, labels = c("1" = "18-24", "2" = "25-34", "3" = "35-44",
                                          "4" = "45-54", "5" = "55-64", "6" = "65+"))) %>% # add these vars to calc
  dplyr::select(-all_of(calc))

# fix state name
brfss <- tibble(oldstate = unique(as.numeric(brfss$X_STATE)), newstate = 1:51) %>%
  right_join(brfss, by = c("oldstate" = "X_STATE")) %>%
  right_join(statekey, by = c("newstate" = "num")) %>%
  dplyr::select(-abb, -oldstate, -newstate) %>%
  dplyr::mutate(name = as.factor(name))

###############################################################################
# dictionary: https://www.datafiles.samhsa.gov/sites/default/files/field-uploads-protected/studies/N-MHSS-2020/N-MHSS-2020-datasets/N-MHSS-2020-DS0001/N-MHSS-2020-DS0001-info/N-MHSS-2020-DS0001-info-codebook.pdf
nmhss <- read_csv("data/nmhss-puf-2020-csv.csv")

ndem <- c("LST", "MHINTAKE", "MHDIAGEVAL", "TREATMT", "FACILITYTYPE", "FOCUS", "OWNERSHP", 
         "PUBLICAGENCY", "RELIG", "NOTREAT", "ANTIPSYCH", "MHCASEMGMT", "MHCHRONIC", "PRIMARYCARE",
         "DIETEXERCOUNSEL", "MHEDUCATION", "MHNOSVCS", "SRVC31", "NOSPECGRP", "LANG", "ADOPTSECLUSION",
         "PAYASST", "LICENMH", "OTHFAC", "FACNUM", "IPSERV", "IPTOTAL")

#: Clients received less-than-24-hour mental health treatment (outpatient and
#partial hospitalization/day treatment) during April 2020 (Q.B5)

apr2020 <- c("OPSERV", "OPTOTAL", "OPSEXTOTM", "OPSEXTOTF", "OPAGETOT017", "OPAGETOT1864", "OPAGETOT65",
             "OPETHTOTHISP", "OPETHTOTNONHISP", "OPETHTOTUNK", "OPRACETOTINDIAN", "OPRACETOTASIAN", 
             "OPRACETOTINDIAN", "OPRACETOTBLK", "OPRACETOTHAWPAC", "OPRACETOTWHIT", "OPRACETOTUNK",
             "OPLEGALTOTVOL", "OPLEGALTOTNONFOREN", "OPLEGALTOTFOREN", "COD_PCT", "TOTADMIS", 
             "PERCENTVA")

treat <- c("TREATMT", "TREATPSYCHOTHRPY", "TREATFAMTHRPY", "TREATGRPTHRPY", "TREATCOGTHRPY", 
           "TREATDIALTHRPY", "TREATCOGREM", "TREATBEHAVMOD", "TREATDUALMHSA", "TREATTRAUMATHRPY",
           "TREATACTVTYTHRPY","TREATELECTRO", "TREATTMS", "TREATKIT", "TREATEMDR", "TREATTELEMEDINCE",
           "TREATOTH", "ASSERTCOMM", "SED", "TAYOUNGADULTS", "SPMI", "SRVC63", "ALZHDEMENTIA", 
           "SRVC31", "SPECGRPEATING", "FIRSTEPPSYCH", "SRVC122", "POSTTRAUM", "SRVC116", 
           "TRAUMATICBRAIN", "SRVC113", "SRVC114", "SRVC115", "SRVC62", "SRVC61", "SRVC32", "SRVC35",
           "NOSPECGRP")

drug <- c("ANTIPSYCH", "CHLOR_NO", "CHLOR_ORAL", "CHLOR_INJ", "CHLOR_REC", "DROPE_NO", 
          "DROPE_INJ", "FLUPH_NO", "FLUPH_ORAL", "FLUPH_INJ", "FLUPH_INJ", "HALOP_NO", 
          "HALOP_ORAL", "HALOP_INJ", "HALOP_LAI", "LOXAP_NO", "LOXAP_ORAL", "LOXAP_INJ", 
          "PERPH_NO", "PERPH_NO", "PERPH_ORAL", "PERPH_INJ", "PIMOZ_NO", "PIMOZ_ORAL", 
          "PIMOZ_TOP", "PROCH_NO", "PROCH_ORAL", "PROCH_INJ", "PROCH_REC", "THIOT_NO", 
          "THIOT_ORAL", "THIOT_INJ", "THIOR_NO", "THIOR_ORAL", "TRIFL_NO", "TRIFL_ORAL",
          "TRIFL_INJ", "FSTGENOTH_NO", "FSTGENOTH_ORAL", "FSTGENOTH_INJ", "FSTGENOTH_LAI",
          "FSTGENOTH_REC", "FSTGENOTH_TOP", "ARIPI_NO", "ARIPI_ORAL", "ARIPI_INJ", "ARIPI_LAI",
          "ASENA_NO", "ASENA_ORAL", "ASENA_INJ", "BREXP_NO", "BREXP_ORAL", "CARIP_NO",
          "CARIP_ORAL", "CLOZA_NO", "CLOZA_ORAL", "ILOPE_NO", "ILOPE_ORAL", "LURAS_NO", 
          "LURAS_ORAL", "OLANZ_NO", "OLANZ_ORAL", "OLANZ_INJ", "OLANZ_LAI", "OLANZFLU_NO",
          "OLANZFLU_ORAL", "PALIP_NO", "PALIP_ORAL", "PALIP_INJ", "PALIP_LAI", "QUETI_NO",
          "QUETI_ORAL", "RISPE_NO", "RISPE_ORAL", "RISPE_INJ", "RISPE_LAI", "ZIPRA_NO", 
          "ZIPRA_ORAL", "ZIPRA_INJ", "SECGEN1OTH_NO", "SECGEN1OTH_ORAL", "SECGEN1OTH_INJ",
          "SECGEN1OTH_LAI", "SECGEN1OTH_REC", "SECGEN1OTH_TOP", "SECGEN2OTH_NO", "SECGEN2OTH_ORAL",
          "SECGEN2OTH_INJ", "SECGEN2OTH_LAI", "SECGEN2OTH_REC", "SECGEN2OTH_TOP", "SECGEN3OTH_NO",
          "SECGEN3OTH_ORAL", "SECGEN3OTH_INJ", "SECGEN3OTH_LAI", "SECGEN3OTH_REC", "SECGEN3OTH_TOP"
          )

management <- c("MHINTCASEMGMT", "MHCASEMGMT", "MHCOURTORDERED", "MHAOT", "MHCHRONIC", 
                "ILLNESSMGMT", "PRIMARYCARE", "DIETEXERCOUNSEL", "FAMPSYCHED", "MHEDUCATION",
                "MHHOUSING", "SUPPHOUSING",  "MHPSYCHREHAB", "MHVOCREHAB", "SUPPEMPLOY", "FOSTERCARE",
                "MHLEGAL", "MHSUICIDE", "MHCONSUMER", "MHHBV", "MHHCV", "MHHIV", "MHSTD", "MHTB",
                "MHTOBACCOUSE", "MHTOBACCOCESS", "MHNICOTINEREP", "SMOKINGCESSATION", "MHOTH",
                "MHNOSVCS", "YNGCHLD", "CHILDREN", "ADOLES", "YOUNGADULTS", "ADULT", "SENIORS", 
                "CRISISTEAM2", "PSYCHON", "PSYCHOFF","SIGNLANG", "LANG", "LANGPROV", "CONTED", 
                "CASEREV", "QUALREV", "OUTFUP","CQIP", "SATSUR", "CPPR", "RCA", "SMOKINGPOLICY",
                "USEDSECLUSION", "ADOPTSECLUSION", "FEESCALE", "PAYASST","REVCHK1", "REVCHK2",
                "REVCHK8", "REVCHK5", "REVCHK10", "FUNDSMHA", "FUNDSTATEWELFARE","FUNDSTATEJUV",
                "FUNDSTATEEDUC", "FUNDOTHSTATE", "FUNDLOCALGOV", "FUNDCSBG", "FUNDCMHG", "FUNDFEDGRANT",
                "REVCHK15", "FUNDVA", "REVCHK17", "FUNDPRIVCOMM", "REVCHK2A", "LICENMH", "LICENSED",
                "LICENPH", "LICENSEDFCS", "LICENHOS", "JCAHO", "CARF", "COA", "CMS", "OTHSTATE",
                "OTHFAC", "FACNUM", "IPSERV", "IPTOTAL", "IPAGETOT017", "IPAGETOT1864", "IPAGETOT65")

lang <- c("LANG", "LANGPROV", "LANG16", "LANG_B", "LANG1", "LANG2", "LANG3", "LANG21", "LANG4", "LANG5",
           "LANG6", "LANG7", "LANG8", "LANG24", "LANG9", "LANG10", "LANG22", "LANG25", "LANG26", "LANG11",  
           "LANG19", "LANG23", "LANG12", "LANG13", "LANG14", "LANG15", "LANG20", "LANG17", "LANG18")

calc <- c("LANGPROV", "TOTADMIS", "OPLEGALTOTFOREN", "OPLEGALTOTNONFOREN", "OPLEGALTOTVOL", "OPRACETOTUNK",
          "OPRACETOTMR", "OPRACETOTWHIT", "OPRACETOTHAWPAC", "OPRACETOTBLK", "OPRACETOTASIAN", "OPRACETOTINDIAN",
          "OPETHTOTUNK", "OPETHTOTNONHISP", "OPETHTOTHISP", "OPAGETOT65", "OPAGETOT1864", "OPAGETOT017")


nmhss1 <- nmhss %>%
 # dplyr::filter() %>%
  dplyr::select(all_of(ndem), all_of(apr2020)) %>%
  dplyr::mutate(across(all_of(apr2020), basiclayer),
                across(all_of(ndem), basiclayer),
                facilitytype = factor(FACILITYTYPE, labels = c("1" = "Psychiatric hospital",
                                                               "2" = "Separate inpatient psychiatric unit of a general hospital",
                                                               "3" = "Residential treatment center for children",
                                                               "4" = "Residential treatment center for adults",
                                                               "5" = "Other residential treatment facility",
                                                               "6" = "Veterans Administration Medical Center (VAMC)",
                                                               "7" = "Community Mental Health Center (CMHC)",
                                                               "8" = "Certified Community Behavioral Health Clinic (CCBHC)",
                                                               "9" = "Partial hospitalization/day treatment facility",
                                                               "10" = "Outpatient MHF",
                                                               "11" = "Multi-setting MHF",
                                                               "12" = "Other")),
                focus = factor(FOCUS, labels = c("1" = "Mental health treatment",
                                                 "3" = "Mental health/substance abuse treatment",
                                                 "4" = "General health care",
                                                 "5" = "Other")),
                ownership = factor(OWNERSHP, labels = c("1" = "Private for-profit organization",
                                                        "2" = "Private non-profit organization",
                                                        "3" = "Public agency or department")),
                operator = factor(PUBLICAGENCY, labels = c("-2" = "logical skip",
                                                           "1" = "State mental health authority (SMHA)",
                                                           "2" = "Other state government agency or department",
                                                           "3" = "Regional authority orgovernment",
                                                           "4" = "Tribal government",
                                                           "5" = "Indian Health Service",
                                                           "6" = "Department of Veterans Affairs",
                                                           "7" = "Other")),
                facnum = factor(FACNUM, labels = c("-2" = "1",
                                                   "1" = "2-5",
                                                   "2" = "6-10",
                                                   "3" = "11-30",
                                                   "4" = "30+"))) %>%
  dplyr::select(-FACILITYTYPE, -FOCUS, -OWNERSHP, -PUBLICAGENCY, -FACNUM)

# fix states
nmhss1 <- left_join(nmhss1, statekey, by = c("LST" = "abb")) %>%
  dplyr::select(-LST, -num)

#remove objects
rm(cdc)

```

```{r agegroupjoin copy, include = FALSE}
## nmhss1 only has 3 age groups "OPAGETOT017", "OPAGETOT1864", "OPAGETOT65"
## brfss has 6, but only fall into 2 of nmhss1 groups. 
## So we'll only be looking at 18-65 vs 65+ :(

## nmhss1 has 50 states, DC, and "other"
## brfss has 50 states, DC,  plus PR and GUAM

## nmhss1 contains 6 race categories including unkown, counts hispanic as ethnicity
## brfss has 6 categories including unkown and hispanic
## gonna have to discount it :(

# age, state, and race

require(dplyr)
require(forcats)
require(readxl)
require(tidyr)
require(purrr)
require(rlang)

## important vignette https://dplyr.tidyverse.org/articles/programming.html
## and http://jonthegeek.com/2018/06/04/writing-custom-tidyverse-functions/

####################################

charlist <- c("X_INCOMG", "EMPLOY1")
b1 <- brfss %>%
  dplyr::select(-date, -PHYSHLTH, -MENTHLTH, -POORHLTH, -health, -HTM4, -WTKG3) %>%
  dplyr::mutate(age = fct_collapse(age, "18-64" = c("18-24", "25-34", "35-44", "45-54", "55-64"), 
                                   "65+" = c("65+")), 
                across(all_of(charlist), as.factor)) %>%
  na.omit()
  #pivot_wider(across(is.factor), id_cols = name)

######################################## nmhss1
relayer <- function(x, ...) {
    if (all(levels(as.factor(x)) == c("-2", "-1", "0", "1"))) { # 4
      factor(x, labels = c("-2" = "logical skip", "-1" = NA, "0" = "no", "1" = "yes"), ordered = TRUE)
    } else if (all(levels(as.factor(x)) == c("-1", "0", "1"))) { # 3
      factor(x, labels = c("-1" = NA, "0" = "no", "1" = "yes"), ordered = TRUE)
    } else if (all(levels(as.factor(x)) == c("0", "1"))) { # 2
      factor(x, labels = c("0" = "no", "1" = "yes"), ordered = TRUE)
    } else if (all(levels(as.factor(x)) == c("-2", "0", "1"))) { # 3 without missing
      factor(x, labels = c("-2" = "logical skip", "0" = "no", "1" = "yes"), ordered = TRUE)
    }
  else if (all(levels(as.factor(x)) == c("-2", "0", "1", "2", "3", "4", "5", "6",
                                       "7", "8", "9", "10", "11", "12"))) { # 14 level to 12
  factor(x, labels = c("-2" = 0, "0" = 0, "1" = 1, "2" = 11,
                       "3" = 21, "4" = 31, "5" = 41, "6" = 51,
                       "7" = 76, "8" = 101, "9" = 251,
                       "10" = 501, "11" = 1001, "12" = 1500), ordered = TRUE)
} else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6",
                                         "7", "8", "9", "10", "11", "12"))) { # 15 level
  factor(x, labels = c("-2" = 0, "-1" = 0, "0" = 0, "1" = 1,
                       "2" = 11, "3" = 21, "4" = 31, "5" = 41,
                       "6" = 51, "7" = 76, "8" = 101, "9" = 251,
                       "10" = 501, "11" = 1001, "12" = 1500), ordered = TRUE)
} else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6",
                                         "7", "8", "9", "10", "11"))) { # 14 level to  11
  factor(x, labels = c("-2" = 0, "-1" = 0, "0" = 0, "1" = 1,
                       "2" = 11, "3" = 21, "4" = 31, "5" = 41,
                       "6" = 51, "7" = 76, "8" = 101, "9" = 251,
                       "10" = 501, "11" = 1001), ordered = TRUE)
} else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6",
                                         "7", "8", "9", "10"))) { # 13 level
  factor(x, labels = c("-2" = 0, "-1" = 0, "0" = 0, "1" = 1,
                       "2" = 11, "3" = 21, "4" = 31, "5" = 41,
                       "6" = 51, "7" = 76, "8" = 101, "9" = 251,
                       "10" = 501), ordered = TRUE)
} else if (all(levels(as.factor(x)) == c("-2","-1", "0", "1", "2", "3", "4", "5", "6",
                                         "7"))) { # pct levels
  factor(x, labels = c("-2" = 0, "-1" = 0, "0" = 0, "1" = 1,
                       "2" = 11, "3" = 21, "4" = 31, "5" = 41,
                       "6" = 51, "7" = 76), ordered = TRUE)
}
else {
  cat("Function not applicable for column", deparse(substitute(x)), "\n")
  return(x)
  }
}

nmhss2 <- nmhss %>%
  # dplyr::filter() %>%
  dplyr::select(all_of(ndem), all_of(apr2020)) %>%
  dplyr::mutate(across(all_of(apr2020), relayer),
                across(all_of(apr2020), as.numeric),
                facilitytype = factor(FACILITYTYPE, labels = c("1" = "Psychiatric hospital",
                                                               "2" = "Separate inpatient psychiatric unit of a general hospital",
                                                               "3" = "Residential treatment center for children",
                                                               "4" = "Residential treatment center for adults",
                                                               "5" = "Other residential treatment facility",
                                                               "6" = "Veterans Administration Medical Center (VAMC)",
                                                               "7" = "Community Mental Health Center (CMHC)",
                                                               "8" = "Certified Community Behavioral Health Clinic (CCBHC)",
                                                               "9" = "Partial hospitalization/day treatment facility",
                                                               "10" = "Outpatient MHF",
                                                               "11" = "Multi-setting MHF",
                                                               "12" = "Other")),
                focus = factor(FOCUS, labels = c("1" = "Mental health treatment",
                                                 "3" = "Mental health/substance abuse treatment",
                                                 "4" = "General health care",
                                                 "5" = "Other")),
                ownership = factor(OWNERSHP, labels = c("1" = "Private for-profit organization",
                                                        "2" = "Private non-profit organization",
                                                        "3" = "Public agency or department")),
                operator = factor(PUBLICAGENCY, labels = c("-2" = "logical skip",
                                                           "1" = "State mental health authority (SMHA)",
                                                           "2" = "Other state government agency or department",
                                                           "3" = "Regional authority orgovernment",
                                                           "4" = "Tribal government",
                                                           "5" = "Indian Health Service",
                                                           "6" = "Department of Veterans Affairs",
                                                           "7" = "Other")),
                facnum = factor(FACNUM, labels = c("-2" = "1",
                                                   "1" = "2-5",
                                                   "2" = "6-10",
                                                   "3" = "11-30",
                                                   "4" = "30+"))) %>%
  dplyr::select(-FACILITYTYPE, -FOCUS, -OWNERSHP, -PUBLICAGENCY, -FACNUM)
  
nmhss2 <- left_join(nmhss2, statekey, by = c("LST" = "abb")) %>%
  dplyr::select(-LST, -num)

# list of #yes# vars using purrr
yvar <- nmhss2 %>%
  dplyr::select(where(~ "yes" %in% levels(.))) %>%
  names()

under <- function(x) {
  str_extract(x, pattern = "[0-9]*")
}

lvar <- nmhss2 %>%
  dplyr::select(where(~ "1-10" %in% levels(.))) %>%
  names()

### for state
n1 <- nmhss2 %>%
  
  #### yessing but needs to be done with 1 row per facility
  group_by(name) %>%
  mutate(across(all_of(yvar), .fns = list(count = ~sum(. == "yes"))),
         TOT = n(),
         across(all_of(lvar), .fns = list(lbound = ~sum(as.numeric(under(.x)), na.rm = TRUE)))) %>%
  dplyr::select(-all_of(yvar))

### extra data
#population stats
pop <- read_csv("data/census2020pop.csv") %>%
  dplyr::mutate(name = tolower(NAME)) %>%
  right_join(statekey, by = "name") %>%
  summarise(name, abb, num, pop = ESTIMATESBASE2020, per = pop / sum(ESTIMATESBASE2020))

```


Mental Health Today
==================================================================

  - 40% of U.S. adults reported struggling with mental health or substance use
  - Suicide is the second-leading cause of death among people aged 10-34
  - The average delay between onset of mental illness symptoms and treatment is 11 years
  
Only gotten worse since COVID-19

  - Are people getting the care, or able to get the care they need

My Data
==================================================================
Two datasets:
  - CDC's Behavioral Risk Factor Surveillance System (BRFSS)
  - Substance Abuse & Mental Health Data Archive's National Mental Health Services Survey (N-MHSS)
  
Goal: Use these two datasets together to: 
  - get an overview of the state of mental health across the country
  - and assess the availability of care and need

I explored these two separately and then together

Severity of Mental Health
==================================================================
Now thinking about your mental health, which includes stress, depression, and problems with emotions, for 
how many days during the past 30 days was your mental health not good? 

  - 0 days, 1-13 days, or 14+ days
  
```{r, echo = FALSE}
us_states <- map_data("state")

#top 10 mhd 14+
mhd14top <- b1 %>%
  group_by(name) %>%
  summarise(per = sum(ifelse(ment14d == "14+", 1, 0))/n(), rank = 1) %>%
  distinct() %>%
  arrange(desc(per)) %>%
  head(10)

t <- mhd14top %>%
  knitr::kable() %>%
print(t)

```

Severity of Mental Health
==================================================================
```{r, echo = FALSE}
data <- b1 %>%
  group_by(name) %>%
  summarise( per = sum(ifelse(ment14d == "14+", 1, 0))/n()) %>%
  distinct() %>%
  right_join(us_states, by = c("name" = "region"))

p <- ggplot(data, aes(x = long, y = lat,
                group = group, fill = per * 100)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  geom_polygon(color = "#8d99ae", size = 0.1) +
  theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had \n14+ Bad Mental Health Days",
                     caption = "Data provided by BRFSS") + 
  scale_fill_distiller(palette = "Spectral") +
  theme(text = element_text(size = 10))
p
```



Are there any facilities in Kentucky?
==================================================================
```{r by state, echo = FALSE}
nmhss1 %>%
  group_by(name) %>%
  mutate(ycount = n(),
         name = ifelse(name == "ZZ", "Other", name)) %>%
  summarise(name, ycount) %>%
  distinct() %>%
  ggplot() +
  geom_bar(aes(x = name, y = ycount), stat = "identity") +
  ljtheme() +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = "State Code",
       y = "Number of Facilities That Offer \nMental Health Intake")
```




Mental Health Facilities
===================================================================
```{r, echo = FALSE}
# Number of MHF per cap
data <- n1 %>%
  dplyr::select(name, TOT) %>%
  distinct() %>%
  left_join(us_states, by = c("name" = "region")) %>%
  left_join(pop, by = c("name"))

q <- ggplot(data, aes(x = long, y = lat,
                group = group, fill = TOT/pop * 100,000)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  geom_polygon(color = "#8d99ae", size = 0.1) +
  theme_map() + labs(fill = "Rate per 100,000", title = "Number of Mental Health Facilities per Capita",
                     caption = "Data provided by SAHMSA.gov") + 
  scale_fill_continuous(labels = comma) +
  scale_fill_distiller(palette = "Spectral") +
  theme(text = element_text(size = 10))
# for at least 1
data <- b1 %>%
  group_by(name) %>%
  summarise( per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
  distinct() %>%
  right_join(us_states, by = c("name" = "region"))

r <- ggplot(data, aes(x = long, y = lat,
                group = group, fill = per * 100)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  geom_polygon(color = "#8d99ae", size = 0.1) +
  theme_map() + labs(fill = "Percent", title = "Percentage of Respondents Who Had at \nLeast 1 Bad Mental Health Day",
                     caption = "Data provided by BRFSS") + 
  scale_fill_distiller(palette = "Spectral") +
  theme(text = element_text(size = 10))

# total MHF
data <- n1 %>%
  summarise(TOT, name) %>%
  distinct() %>%
  right_join(us_states, by = c("name" = "region"))

o <- ggplot(data, aes(x = long, y = lat,
                group = group, fill = TOT)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  geom_polygon(color = "#8d99ae", size = 0.1) +
  theme_map() + labs(fill = "Percent", title = "Total Number of Mental Health Facilities",
                     caption = "Data provided by N-MHSS") + 
  scale_fill_distiller(palette = "Spectral") +
  theme(text = element_text(size = 10))

grid.arrange(o, p, q, r, nrow = 2)

```


Is this relationship significant?
==========================================================

```{r, echo = FALSE}
pcor <- n1 %>%
  dplyr::select(name, TOT) %>%
  distinct() %>%
  na.omit()

mcor <- b1 %>%
  group_by(name) %>%
  summarise(per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
  distinct()

data <- left_join(pcor, mcor, by = "name")

a <- ggplot(data, aes(x = per, y = TOT, label = name)) +
  geom_text(size = 3) +
  labs(x = "Percent of Respondents who had at Least 1 Bad Mental Health Day",
       y = "Number of MHF", 
       title = "Mental Health Need and Availability") +
  ljtheme() +
  geom_smooth(formula = y ~ x, method = "lm", lty = 2, se = FALSE)

a
```

```{r, echo = FALSE}
pcor <- n1 %>%
  dplyr::select(name, TOT) %>%
  distinct() %>%
  na.omit()

mcor <- b1 %>%
  group_by(name) %>%
  summarise(per = sum(ifelse(ment14d != "0", 1, 0))/n()) %>%
  distinct()

data <- left_join(pcor, mcor, by = "name")

```

```{r}
mod1 <- lm(TOT ~ per, data = data)
summary(mod1)
```


What predicts bad mental health?
=========================================================

No idea.

```{r, echo = FALSE}
# accuracy?
data <- b1 %>%
  dplyr:::mutate(ment14d = ifelse(ment14d == "0", 0, 1))

# model
mod1 <- glm(formula = factor(ment14d) ~ ., data = data, family = "binomial")

# accuracy?
pred <- predict(mod1, dplyr::select(data,  -ment14d), type = "response")
cmatrix <- data.frame(y = data$ment14d, pred = round(pred)) %>%
  dplyr::mutate(result = ifelse(y == pred, 1, 0))
table(actual = cmatrix$y, pred = cmatrix$pred)
sum(cmatrix$result)/nrow(cmatrix)

# remove lowest predictors

data <- data %>%
  dplyr::select(-X_INCOMG, -metro, -genhealth, -age)

# model
mod2 <- glm(formula = factor(ment14d) ~ ., data = data, family = "binomial")

# accuracy?
pred <- predict(mod2, dplyr::select(data,  -ment14d), type = "response")
cmatrix <- data.frame(y = data$ment14d, pred = round(pred)) %>%
  dplyr::mutate(result = ifelse(y == pred, 1, 0))
table(actual = cmatrix$y, pred = cmatrix$pred)
sum(cmatrix$result)/nrow(cmatrix)
```


Reflection
=========================================================
I think I took on too much at the beginning

I had to restructure my approach a couple of times

Future Directions:
  - What influences where facilities are built?
  - How can we increase mental health availability

